{
  "name": "stitchw",
  "description": "Stitch your CommonJS modules together for the browser + less, css, json and Windows compatibility.",
  "contributors": [
    {
      "name": "Josh Peek"
    },
    {
      "name": "Sam Stephenson"
    },
    {
      "name": "Sabin Marcu"
    }
  ],
  "version": "0.3.15",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/sstephenson/stitch/raw/master/LICENSE"
    }
  ],
  "main": "./src/stitch",
  "repository": {
    "type": "git",
    "url": "git://github.com/sstephenson/stitch.git"
  },
  "dependencies": {
    "async": ">=0.1.15",
    "underscore": ">=1.1.3"
  },
  "devDependencies": {
    "coffee-script": ">= 1.2.0",
    "nodeunit": ">= 0.6.4",
    "eco": ">= 1.1.0-rc-3",
    "less": ">=1.2.1",
    "exec-sync": "*"
  },
  "engine": {
    "node": ">=0.6"
  },
  "_npmUser": {
    "name": "sabinmarcu",
    "email": "sabinmarcu@gmail.com"
  },
  "_id": "stitchw@0.3.10",
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "_engineSupported": true,
  "_npmVersion": "1.1.19",
  "_nodeVersion": "v0.6.16",
  "_defaultsLoaded": true,
  "_from": "stitchw@*",
  "readme": "<img src=\"https://github.com/downloads/sstephenson/stitch/logo.jpg\"\r\nwidth=432 height=329>\r\n\r\nDevelop and test your JavaScript applications as CommonJS modules in\r\nNode.js. Then __Stitch__ them together to run in the browser.\r\n\r\n    npm install stitch\r\n\r\nBundle code in lib/ and vendor/ and serve it with [Express](http://expressjs.com/):\r\n\r\n    var stitch  = require('stitch');\r\n    var express = require('express');\r\n\r\n    var package = stitch.createPackage({\r\n      paths: [__dirname + '/lib', __dirname + '/vendor']\r\n    });\r\n\r\n    var app = express.createServer();\r\n    app.get('/application.js', package.createServer());\r\n    app.listen(3000);\r\n\r\nOr build it to a file:\r\n\r\n    var stitch  = require('stitch');\r\n    var fs      = require('fs');\r\n\r\n    var package = stitch.createPackage({\r\n      paths: [__dirname + '/lib', __dirname + '/vendor']\r\n    });\r\n\r\n    package.compile(function (err, source){\r\n      fs.writeFile('package.js', source, function (err) {\r\n        if (err) throw err;\r\n        console.log('Compiled package.js');\r\n      })\r\n    })\r\n",
  "readmeFilename": "README.md",
  "dist": {
    "shasum": "5126e926ba9924bafabb7ec499f676aafed82cb2"
  }
}
